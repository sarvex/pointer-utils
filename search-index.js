var searchIndex = JSON.parse('{\
"erasable":{"doc":"Erase pointers of their concrete type and store …","t":[18,8,8,6,3,11,11,11,11,11,11,11,11,11,11,11,5,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ACK_1_1_0","Erasable","ErasablePtr","ErasedPtr","Thin","as_mut","as_ref","borrow","borrow_mut","clone","clone_into","cmp","deref","deref_mut","drop","eq","erase","erase","erase","erase","finish","fmt","fmt","fmt","from","from","from","from_iter","hash","into","into_future","into_inner","into_iter","next","next_back","nth","nth_back","partial_cmp","poll","ptr_eq","size_hint","to_owned","to_string","try_from","try_into","type_id","unerase","unerase","unerase","unerase","with","with_mut","write","write_i128","write_i16","write_i32","write_i64","write_i8","write_isize","write_u128","write_u16","write_u32","write_u64","write_u8","write_usize"],"q":["erasable","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Whether this implementor has acknowledged the 1.1.0 update …","A pointee type that supports type-erased pointers (thin …","A (smart) pointer type that can be type-erased (making a …","A thin, type-erased pointer.","Wrapper struct to create thin pointer types.","","","","","","","","","","","","Erase a pointer.","Turn this erasable pointer into an erased pointer.","Turn this erasable pointer into an erased pointer.","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","Extract the wrapped pointer.","","","","","","","","Check two thin pointers for pointer equivalence.","","","","","","","Unerase this erased pointer.","Unerase this erased pointer.","","","Run a closure with a borrow of the real pointer.","Run a closure with a mutable borrow of the real pointer.","","","","","","","","","","","","",""],"i":[31,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,3,31,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,31,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,0,0,0,0,[1],[1],[[]],[[]],[1,1],[[]],[[1,1],2],[1],[1],[[[1,[3]]]],[[1,1],4],[[[6,[5]]],7],[[],7],[6,7],[[[1,[3]]],7],[1,8],[[1,9],10],[[1,9],10],[[1,9],10],[11],[3,[[1,[3]]]],[[]],[12,1],[1],[[]],[[]],[[[1,[3]]],3],[[]],[1,13],[1,13],[[1,14],13],[[1,14],13],[[1,1],[[13,[2]]]],[[[15,[1]],16],17],[[[1,[3]],1],4],[1],[[]],[[],18],[[],19],[[],19],[[],20],[7],[7,6],[[[6,[0]]],6],[7,[[1,[3]]]],[[[1,[3]]]],[[[1,[3]]]],[1],[[1,21]],[[1,22]],[[1,23]],[[1,24]],[[1,25]],[[1,26]],[[1,27]],[[1,28]],[[1,29]],[[1,8]],[[1,30]],[[1,14]]],"p":[[3,"Thin"],[4,"Ordering"],[8,"ErasablePtr"],[15,"bool"],[8,"Sized"],[3,"NonNull"],[6,"ErasedPtr"],[15,"u64"],[3,"Formatter"],[6,"Result"],[15,"never"],[8,"IntoIterator"],[4,"Option"],[15,"usize"],[3,"Pin"],[3,"Context"],[4,"Poll"],[3,"String"],[4,"Result"],[3,"TypeId"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[15,"isize"],[15,"u128"],[15,"u16"],[15,"u32"],[15,"u8"],[8,"Erasable"]]},\
"ptr_union":{"doc":"Pointer union types the size of a pointer by storing the …","tn":["A","A","A","A","B","B","B","B","Builder16","Builder2","Builder4","Builder8","C","C","C","D","D","D","E","E","Enum16","Enum2","Enum4","Enum8","F","F","G","G","H","H","I","J","K","L","M","N","O","P","Union16","Union2","Union4","Union8","a","a","a","a","a","a","a","a","as_deref","as_deref","as_deref","as_deref","as_deref_unchecked","as_deref_unchecked","as_deref_unchecked","as_deref_unchecked","as_untagged_ptr","as_untagged_ptr","as_untagged_ptr","as_untagged_ptr","b","b","b","b","b","b","b","b","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c","c","c","c","c","c","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_a","clone_a","clone_a","clone_a","clone_b","clone_b","clone_b","clone_b","clone_c","clone_c","clone_c","clone_d","clone_d","clone_d","clone_e","clone_e","clone_f","clone_f","clone_g","clone_g","clone_h","clone_h","clone_i","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_j","clone_k","clone_l","clone_m","clone_n","clone_o","clone_p","copy_a","copy_a","copy_a","copy_a","copy_b","copy_b","copy_b","copy_b","copy_c","copy_c","copy_c","copy_d","copy_d","copy_d","copy_e","copy_e","copy_f","copy_f","copy_g","copy_g","copy_h","copy_h","copy_i","copy_j","copy_k","copy_l","copy_m","copy_n","copy_o","copy_p","d","d","d","d","d","d","drop","drop","drop","drop","e","e","e","e","eq","eq","eq","eq","eq","eq","eq","eq","erase","erase","erase","erase","f","f","f","f","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","g","g","g","g","h","h","h","h","hash","hash","hash","hash","hash","hash","hash","hash","i","i","into","into","into","into","into","into","into","into","into","into","into","into","into_a","into_a","into_a","into_a","into_b","into_b","into_b","into_b","into_c","into_c","into_c","into_d","into_d","into_d","into_e","into_e","into_f","into_f","into_g","into_g","into_h","into_h","into_i","into_j","into_k","into_l","into_m","into_n","into_o","into_p","is_a","is_a","is_a","is_a","is_b","is_b","is_b","is_b","is_c","is_c","is_c","is_d","is_d","is_d","is_e","is_e","is_f","is_f","is_g","is_g","is_h","is_h","is_i","is_j","is_k","is_l","is_m","is_n","is_o","is_p","j","j","k","k","l","l","m","m","n","n","new_a","new_a","new_a","new_a","new_b","new_b","new_b","new_b","new_c","new_c","new_c","new_d","new_d","new_d","new_e","new_e","new_f","new_f","new_g","new_g","new_h","new_h","new_i","new_j","new_k","new_l","new_m","new_n","new_o","new_p","new_unchecked","new_unchecked","new_unchecked","new_unchecked","o","o","p","p","pack","pack","pack","pack","pack_unchecked","pack_unchecked","pack_unchecked","pack_unchecked","ptr_eq","ptr_eq","ptr_eq","ptr_eq","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_deref","try_deref","try_deref","try_deref","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_pack","try_pack","try_pack","try_pack","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unerase","unerase","unerase","unerase","unerase","unerase","unerase","unerase","unerase","unerase","unerase","unerase","unerase","unerase","unerase","unerase","unpack","unpack","unpack","unpack","with_a","with_a","with_a","with_a","with_b","with_b","with_b","with_b","with_c","with_c","with_c","with_d","with_d","with_d","with_e","with_e","with_f","with_f","with_g","with_g","with_h","with_h","with_i","with_j","with_k","with_l","with_m","with_n","with_o","with_p"],"q":["ptr_uniond":["","","","","","","","","A builder for <code>Union16</code>.","A builder for <code>Union2</code>.","A builder for <code>Union4</code>.","A builder for <code>Union8</code>.","","","","","","","","","An unpacked version of <code>Union8</code>.","An unpacked version of <code>Union2</code>.","An unpacked version of <code>Union4</code>.","An unpacked version of <code>Union4</code>.","","","","","","","","","","","","","","","A pointer union of up to sixteen pointer types.","A pointer union of two pointer types.","A pointer union of four pointer types.","A pointer union of eight pointer types.","Get a reference to this variant’s target.","Get a reference to this variant’s target.","Get a reference to this variant’s target.","Get a reference to this variant’s target.","Construct a union at this variant.","Construct a union at this variant.","Construct a union at this variant.","Construct a union at this variant.","Dereference the current pointer.","Dereference the current pointer.","Dereference the current pointer.","Dereference the current pointer.","Dereference the current pointer.","Dereference the current pointer.","Dereference the current pointer.","Dereference the current pointer.","Get the raw type-erased untagged pointer to the payload.","Get the raw type-erased untagged pointer to the payload.","Get the raw type-erased untagged pointer to the payload.","Get the raw type-erased untagged pointer to the payload.","Get a reference to this variant’s target.","Get a reference to this variant’s target.","Get a reference to this variant’s target.","Get a reference to this variant’s target.","Construct a union at this variant.","Construct a union at this variant.","Construct a union at this variant.","Construct a union at this variant.","","","","","","","","","","","","","","","","","","","","","","","","","Get a reference to this variant’s target.","Get a reference to this variant’s target.","Get a reference to this variant’s target.","Construct a union at this variant.","Construct a union at this variant.","Construct a union at this variant.","","","","","","","","","","","","","Clone this variant out of the union.","Clone this variant out of the union.","Clone this variant out of the union.","Clone this variant out of the union.","Clone this variant out of the union.","Clone this variant out of the union.","Clone this variant out of the union.","Clone this variant out of the union.","Clone this variant out of the union.","Clone this variant out of the union.","Clone this variant out of the union.","Clone this variant out of the union.","Clone this variant out of the union.","Clone this variant out of the union.","Clone this variant out of the union.","Clone this variant out of the union.","Clone this variant out of the union.","Clone this variant out of the union.","Clone this variant out of the union.","Clone this variant out of the union.","Clone this variant out of the union.","Clone this variant out of the union.","Clone this variant out of the union.","","","","","","","","","","","","","Clone this variant out of the union.","Clone this variant out of the union.","Clone this variant out of the union.","Clone this variant out of the union.","Clone this variant out of the union.","Clone this variant out of the union.","Clone this variant out of the union.","Copy this variant out of the union.","Copy this variant out of the union.","Copy this variant out of the union.","Copy this variant out of the union.","Copy this variant out of the union.","Copy this variant out of the union.","Copy this variant out of the union.","Copy this variant out of the union.","Copy this variant out of the union.","Copy this variant out of the union.","Copy this variant out of the union.","Copy this variant out of the union.","Copy this variant out of the union.","Copy this variant out of the union.","Copy this variant out of the union.","Copy this variant out of the union.","Copy this variant out of the union.","Copy this variant out of the union.","Copy this variant out of the union.","Copy this variant out of the union.","Copy this variant out of the union.","Copy this variant out of the union.","Copy this variant out of the union.","Copy this variant out of the union.","Copy this variant out of the union.","Copy this variant out of the union.","Copy this variant out of the union.","Copy this variant out of the union.","Copy this variant out of the union.","Copy this variant out of the union.","Get a reference to this variant’s target.","Get a reference to this variant’s target.","Get a reference to this variant’s target.","Construct a union at this variant.","Construct a union at this variant.","Construct a union at this variant.","","","","","Get a reference to this variant’s target.","Get a reference to this variant’s target.","Construct a union at this variant.","Construct a union at this variant.","","","","","","","","","","","","","Get a reference to this variant’s target.","Get a reference to this variant’s target.","Construct a union at this variant.","Construct a union at this variant.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a reference to this variant’s target.","Get a reference to this variant’s target.","Construct a union at this variant.","Construct a union at this variant.","Get a reference to this variant’s target.","Get a reference to this variant’s target.","Construct a union at this variant.","Construct a union at this variant.","","","","","","","","","Get a reference to this variant’s target.","Construct a union at this variant.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Extract this variant from the union.","Extract this variant from the union.","Extract this variant from the union.","Extract this variant from the union.","Extract this variant from the union.","Extract this variant from the union.","Extract this variant from the union.","Extract this variant from the union.","Extract this variant from the union.","Extract this variant from the union.","Extract this variant from the union.","Extract this variant from the union.","Extract this variant from the union.","Extract this variant from the union.","Extract this variant from the union.","Extract this variant from the union.","Extract this variant from the union.","Extract this variant from the union.","Extract this variant from the union.","Extract this variant from the union.","Extract this variant from the union.","Extract this variant from the union.","Extract this variant from the union.","Extract this variant from the union.","Extract this variant from the union.","Extract this variant from the union.","Extract this variant from the union.","Extract this variant from the union.","Extract this variant from the union.","Extract this variant from the union.","Check if the union is this variant.","Check if the union is this variant.","Check if the union is this variant.","Check if the union is this variant.","Check if the union is this variant.","Check if the union is this variant.","Check if the union is this variant.","Check if the union is this variant.","Check if the union is this variant.","Check if the union is this variant.","Check if the union is this variant.","Check if the union is this variant.","Check if the union is this variant.","Check if the union is this variant.","Check if the union is this variant.","Check if the union is this variant.","Check if the union is this variant.","Check if the union is this variant.","Check if the union is this variant.","Check if the union is this variant.","Check if the union is this variant.","Check if the union is this variant.","Check if the union is this variant.","Check if the union is this variant.","Check if the union is this variant.","Check if the union is this variant.","Check if the union is this variant.","Check if the union is this variant.","Check if the union is this variant.","Check if the union is this variant.","Get a reference to this variant’s target.","Construct a union at this variant.","Get a reference to this variant’s target.","Construct a union at this variant.","Get a reference to this variant’s target.","Construct a union at this variant.","Get a reference to this variant’s target.","Construct a union at this variant.","Get a reference to this variant’s target.","Construct a union at this variant.","Construct a varaint of this union with a dynamic alignment …","Construct a varaint of this union with a dynamic alignment …","Construct a varaint of this union with a dynamic alignment …","Construct a varaint of this union with a dynamic alignment …","Construct a varaint of this union with a dynamic alignment …","Construct a varaint of this union with a dynamic alignment …","Construct a varaint of this union with a dynamic alignment …","Construct a varaint of this union with a dynamic alignment …","Construct a varaint of this union with a dynamic alignment …","Construct a varaint of this union with a dynamic alignment …","Construct a varaint of this union with a dynamic alignment …","Construct a varaint of this union with a dynamic alignment …","Construct a varaint of this union with a dynamic alignment …","Construct a varaint of this union with a dynamic alignment …","Construct a varaint of this union with a dynamic alignment …","Construct a varaint of this union with a dynamic alignment …","Construct a varaint of this union with a dynamic alignment …","Construct a varaint of this union with a dynamic alignment …","Construct a varaint of this union with a dynamic alignment …","Construct a varaint of this union with a dynamic alignment …","Construct a varaint of this union with a dynamic alignment …","Construct a varaint of this union with a dynamic alignment …","Construct a varaint of this union with a dynamic alignment …","Construct a varaint of this union with a dynamic alignment …","Construct a varaint of this union with a dynamic alignment …","Construct a varaint of this union with a dynamic alignment …","Construct a varaint of this union with a dynamic alignment …","Construct a varaint of this union with a dynamic alignment …","Construct a varaint of this union with a dynamic alignment …","Construct a varaint of this union with a dynamic alignment …","Assert that creating pointer unions of these types is safe.","Assert that creating pointer unions of these types is safe.","Assert that creating pointer unions of these types is safe.","Assert that creating pointer unions of these types is safe.","Get a reference to this variant’s target.","Construct a union at this variant.","Get a reference to this variant’s target.","Construct a union at this variant.","Pack this loose enum into a pointer union.","Pack this loose enum into a pointer union.","Pack this loose enum into a pointer union.","Pack this loose enum into a pointer union.","Pack this loose enum into a pointer union.","Pack this loose enum into a pointer union.","Pack this loose enum into a pointer union.","Pack this loose enum into a pointer union.","Check if two unions are the same variant and point to the …","Check if two unions are the same variant and point to the …","Check if two unions are the same variant and point to the …","Check if two unions are the same variant and point to the …","","","","","","","","","","","","","Dereference the current pointer.","Dereference the current pointer.","Dereference the current pointer.","Dereference the current pointer.","","","","","","","","","","","","","","","","","","","","","","","","","Pack this loose enum into a pointer union.","Pack this loose enum into a pointer union.","Pack this loose enum into a pointer union.","Pack this loose enum into a pointer union.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unpack this union into an enum.","Unpack this union into an enum.","Unpack this union into an enum.","Unpack this union into an enum.","Run a closure with this variant.","Run a closure with this variant.","Run a closure with this variant.","Run a closure with this variant.","Run a closure with this variant.","Run a closure with this variant.","Run a closure with this variant.","Run a closure with this variant.","Run a closure with this variant.","Run a closure with this variant.","Run a closure with this variant.","Run a closure with this variant.","Run a closure with this variant.","Run a closure with this variant.","Run a closure with this variant.","Run a closure with this variant.","Run a closure with this variant.","Run a closure with this variant.","Run a closure with this variant.","Run a closure with this variant.","Run a closure with this variant.","Run a closure with this variant.","Run a closure with this variant.","Run a closure with this variant.","Run a closure with this variant.","Run a closure with this variant.","Run a closure with this variant.","Run a closure with this variant.","Run a closure with this variant.","Run a closure with this variant."],"i":[13,14,15,16,13,14,15,16,0,0,0,0,14,15,16,14,15,16,15,16,0,0,0,0,15,16,15,16,15,16,16,16,16,16,16,16,16,16,0,0,0,0,2,4,5,6,7,8,9,10,2,4,5,6,2,4,5,6,2,4,5,6,2,4,5,6,7,8,9,10,2,4,5,6,7,8,9,10,13,14,15,16,2,4,5,6,7,8,9,10,13,14,15,16,4,5,6,8,9,10,2,4,5,6,7,8,9,10,13,14,15,16,2,4,5,6,2,4,5,6,4,5,6,4,5,6,5,6,5,6,5,6,5,6,6,2,4,5,6,7,8,9,10,13,14,15,16,6,6,6,6,6,6,6,2,4,5,6,2,4,5,6,4,5,6,4,5,6,5,6,5,6,5,6,5,6,6,6,6,6,6,6,6,6,4,5,6,8,9,10,2,4,5,6,5,6,9,10,2,4,5,6,13,14,15,16,2,4,5,6,5,6,9,10,2,4,5,6,7,8,9,10,13,14,15,16,2,4,5,6,7,8,9,10,13,14,15,16,5,6,9,10,5,6,9,10,2,4,5,6,13,14,15,16,6,10,2,4,5,6,7,8,9,10,13,14,15,16,2,4,5,6,2,4,5,6,4,5,6,4,5,6,5,6,5,6,5,6,5,6,6,6,6,6,6,6,6,6,2,4,5,6,2,4,5,6,4,5,6,4,5,6,5,6,5,6,5,6,5,6,6,6,6,6,6,6,6,6,6,10,6,10,6,10,6,10,6,10,2,4,5,6,2,4,5,6,4,5,6,4,5,6,5,6,5,6,5,6,5,6,6,6,6,6,6,6,6,6,7,8,9,10,6,10,6,10,13,14,15,16,13,14,15,16,2,4,5,6,2,4,5,6,7,8,9,10,13,14,15,16,2,4,5,6,2,4,5,6,7,8,9,10,13,14,15,16,2,4,5,6,7,8,9,10,13,14,15,16,13,14,15,16,2,4,5,6,7,8,9,10,13,14,15,16,2,2,4,4,5,5,6,6,7,8,9,10,13,14,15,16,2,4,5,6,2,4,5,6,2,4,5,6,4,5,6,4,5,6,5,6,5,6,5,6,5,6,6,6,6,6,6,6,6,6],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[2,[1,1]]],3],[[[4,[1,1,1,1]]],3],[[[5,[1,1,1,1,1,1,1,1]]],3],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],3],[[[7,[1,1]],1],[[2,[1,1]]]],[[[8,[1,1,1,1]],1],[[4,[1,1,1,1]]]],[[[9,[1,1,1,1,1,1,1,1]],1],[[5,[1,1,1,1,1,1,1,1]]]],[[[10,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],1],[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]]],[[[2,[1,1]],7],2],[[[4,[1,1,1,1]],8],4],[[[5,[1,1,1,1,1,1,1,1]],9],5],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],10],6],[[[2,[1,1]]],2],[[[4,[1,1,1,1]]],4],[[[5,[1,1,1,1,1,1,1,1]]],5],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],6],[[[2,[1,1]]],11],[[[4,[1,1,1,1]]],11],[[[5,[1,1,1,1,1,1,1,1]]],11],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],11],[[[2,[1,1]]],3],[[[4,[1,1,1,1]]],3],[[[5,[1,1,1,1,1,1,1,1]]],3],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],3],[[[7,[1,1]],1],[[2,[1,1]]]],[[[8,[1,1,1,1]],1],[[4,[1,1,1,1]]]],[[[9,[1,1,1,1,1,1,1,1]],1],[[5,[1,1,1,1,1,1,1,1]]]],[[[10,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],1],[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[4,[1,1,1,1]]],3],[[[5,[1,1,1,1,1,1,1,1]]],3],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],3],[[[8,[1,1,1,1]],1],[[4,[1,1,1,1]]]],[[[9,[1,1,1,1,1,1,1,1]],1],[[5,[1,1,1,1,1,1,1,1]]]],[[[10,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],1],[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]]],[2,2],[4,4],[5,5],[6,6],[7,7],[8,8],[9,9],[10,10],[[[13,[12,12]]],[[13,[12,12]]]],[[[14,[12,12,12,12]]],[[14,[12,12,12,12]]]],[[[15,[12,12,12,12,12,12,12,12]]],[[15,[12,12,12,12,12,12,12,12]]]],[[[16,[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12]]],[[16,[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12]]]],[[[2,[1,1]]],[[3,[1]]]],[[[4,[1,1,1,1]]],[[3,[1]]]],[[[5,[1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[2,[1,1]]],[[3,[1]]]],[[[4,[1,1,1,1]]],[[3,[1]]]],[[[5,[1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[4,[1,1,1,1]]],[[3,[1]]]],[[[5,[1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[4,[1,1,1,1]]],[[3,[1]]]],[[[5,[1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[5,[1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[5,[1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[5,[1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[5,[1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[2,[1,1]]],[[3,[1]]]],[[[4,[1,1,1,1]]],[[3,[1]]]],[[[5,[1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[2,[1,1]]],[[3,[1]]]],[[[4,[1,1,1,1]]],[[3,[1]]]],[[[5,[1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[4,[1,1,1,1]]],[[3,[1]]]],[[[5,[1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[4,[1,1,1,1]]],[[3,[1]]]],[[[5,[1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[5,[1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[5,[1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[5,[1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[5,[1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[3,[1]]]],[[[4,[1,1,1,1]]],3],[[[5,[1,1,1,1,1,1,1,1]]],3],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],3],[[[8,[1,1,1,1]],1],[[4,[1,1,1,1]]]],[[[9,[1,1,1,1,1,1,1,1]],1],[[5,[1,1,1,1,1,1,1,1]]]],[[[10,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],1],[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]]],[[[2,[1,1]]]],[[[4,[1,1,1,1]]]],[[[5,[1,1,1,1,1,1,1,1]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]]],[[[5,[1,1,1,1,1,1,1,1]]],3],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],3],[[[9,[1,1,1,1,1,1,1,1]],1],[[5,[1,1,1,1,1,1,1,1]]]],[[[10,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],1],[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]]],[[2,2],17],[[4,4],17],[[5,5],17],[[6,6],17],[[[13,[18,18]],13],17],[[[14,[18,18,18,18]],14],17],[[[15,[18,18,18,18,18,18,18,18]],15],17],[[[16,[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18]],16],17],[[[2,[1,1]]],11],[[[4,[1,1,1,1]]],11],[[[5,[1,1,1,1,1,1,1,1]]],11],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],11],[[[5,[1,1,1,1,1,1,1,1]]],3],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],3],[[[9,[1,1,1,1,1,1,1,1]],1],[[5,[1,1,1,1,1,1,1,1]]]],[[[10,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],1],[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]]],[[2,19],20],[[4,19],20],[[5,19],20],[[6,19],20],[[7,19],20],[[8,19],20],[[9,19],20],[[10,19],20],[[[13,[21,21]],19],20],[[[14,[21,21,21,21]],19],20],[[[15,[21,21,21,21,21,21,21,21]],19],20],[[[16,[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21]],19],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[1,1,1,1,1,1,1,1]]],3],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],3],[[[9,[1,1,1,1,1,1,1,1]],1],[[5,[1,1,1,1,1,1,1,1]]]],[[[10,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],1],[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]]],[[[5,[1,1,1,1,1,1,1,1]]],3],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],3],[[[9,[1,1,1,1,1,1,1,1]],1],[[5,[1,1,1,1,1,1,1,1]]]],[[[10,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],1],[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]]],[2],[4],[5],[6],[[[13,[22,22]]]],[[[14,[22,22,22,22]]]],[[[15,[22,22,22,22,22,22,22,22]]]],[[[16,[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],3],[[[10,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],1],[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1,1]]],[[23,[1,[2,[1,1]]]]]],[[[4,[1,1,1,1]]],[[23,[1,[4,[1,1,1,1]]]]]],[[[5,[1,1,1,1,1,1,1,1]]],[[23,[1,[5,[1,1,1,1,1,1,1,1]]]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[23,[1,[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]]]]],[[[2,[1,1]]],[[23,[1,[2,[1,1]]]]]],[[[4,[1,1,1,1]]],[[23,[1,[4,[1,1,1,1]]]]]],[[[5,[1,1,1,1,1,1,1,1]]],[[23,[1,[5,[1,1,1,1,1,1,1,1]]]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[23,[1,[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]]]]],[[[4,[1,1,1,1]]],[[23,[1,[4,[1,1,1,1]]]]]],[[[5,[1,1,1,1,1,1,1,1]]],[[23,[1,[5,[1,1,1,1,1,1,1,1]]]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[23,[1,[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]]]]],[[[4,[1,1,1,1]]],[[23,[1,[4,[1,1,1,1]]]]]],[[[5,[1,1,1,1,1,1,1,1]]],[[23,[1,[5,[1,1,1,1,1,1,1,1]]]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[23,[1,[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]]]]],[[[5,[1,1,1,1,1,1,1,1]]],[[23,[1,[5,[1,1,1,1,1,1,1,1]]]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[23,[1,[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]]]]],[[[5,[1,1,1,1,1,1,1,1]]],[[23,[1,[5,[1,1,1,1,1,1,1,1]]]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[23,[1,[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]]]]],[[[5,[1,1,1,1,1,1,1,1]]],[[23,[1,[5,[1,1,1,1,1,1,1,1]]]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[23,[1,[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]]]]],[[[5,[1,1,1,1,1,1,1,1]]],[[23,[1,[5,[1,1,1,1,1,1,1,1]]]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[23,[1,[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[23,[1,[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[23,[1,[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[23,[1,[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[23,[1,[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[23,[1,[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[23,[1,[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[23,[1,[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[23,[1,[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]]]]],[[[2,[1,1]]],17],[[[4,[1,1,1,1]]],17],[[[5,[1,1,1,1,1,1,1,1]]],17],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],17],[[[2,[1,1]]],17],[[[4,[1,1,1,1]]],17],[[[5,[1,1,1,1,1,1,1,1]]],17],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],17],[[[4,[1,1,1,1]]],17],[[[5,[1,1,1,1,1,1,1,1]]],17],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],17],[[[4,[1,1,1,1]]],17],[[[5,[1,1,1,1,1,1,1,1]]],17],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],17],[[[5,[1,1,1,1,1,1,1,1]]],17],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],17],[[[5,[1,1,1,1,1,1,1,1]]],17],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],17],[[[5,[1,1,1,1,1,1,1,1]]],17],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],17],[[[5,[1,1,1,1,1,1,1,1]]],17],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],17],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],17],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],17],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],17],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],17],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],17],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],17],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],17],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],17],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],3],[[[10,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],1],[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],3],[[[10,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],1],[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],3],[[[10,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],1],[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],3],[[[10,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],1],[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],3],[[[10,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],1],[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]]],[1,[[23,[[2,[1,1]],1]]]],[1,[[23,[[4,[1,1,1,1]],1]]]],[1,[[23,[[5,[1,1,1,1,1,1,1,1]],1]]]],[1,[[23,[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],1]]]],[1,[[23,[[2,[1,1]],1]]]],[1,[[23,[[4,[1,1,1,1]],1]]]],[1,[[23,[[5,[1,1,1,1,1,1,1,1]],1]]]],[1,[[23,[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],1]]]],[1,[[23,[[4,[1,1,1,1]],1]]]],[1,[[23,[[5,[1,1,1,1,1,1,1,1]],1]]]],[1,[[23,[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],1]]]],[1,[[23,[[4,[1,1,1,1]],1]]]],[1,[[23,[[5,[1,1,1,1,1,1,1,1]],1]]]],[1,[[23,[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],1]]]],[1,[[23,[[5,[1,1,1,1,1,1,1,1]],1]]]],[1,[[23,[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],1]]]],[1,[[23,[[5,[1,1,1,1,1,1,1,1]],1]]]],[1,[[23,[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],1]]]],[1,[[23,[[5,[1,1,1,1,1,1,1,1]],1]]]],[1,[[23,[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],1]]]],[1,[[23,[[5,[1,1,1,1,1,1,1,1]],1]]]],[1,[[23,[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],1]]]],[1,[[23,[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],1]]]],[1,[[23,[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],1]]]],[1,[[23,[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],1]]]],[1,[[23,[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],1]]]],[1,[[23,[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],1]]]],[1,[[23,[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],1]]]],[1,[[23,[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],1]]]],[1,[[23,[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],1]]]],[[],7],[[],8],[[],9],[[],10],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],3],[[[10,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],1],[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],3],[[[10,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],1],[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]]],[[[13,[1,1]],[7,[1,1]]],[[2,[1,1]]]],[[[14,[1,1,1,1]],[8,[1,1,1,1]]],[[4,[1,1,1,1]]]],[[[15,[1,1,1,1,1,1,1,1]],[9,[1,1,1,1,1,1,1,1]]],[[5,[1,1,1,1,1,1,1,1]]]],[[[16,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],[10,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]]],[[[13,[1,1]]],[[2,[1,1]]]],[[[14,[1,1,1,1]]],[[4,[1,1,1,1]]]],[[[15,[1,1,1,1,1,1,1,1]]],[[5,[1,1,1,1,1,1,1,1]]]],[[[16,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]]],[[[2,[1,1]],[2,[1,1]]],17],[[[4,[1,1,1,1]],[4,[1,1,1,1]]],17],[[[5,[1,1,1,1,1,1,1,1]],[5,[1,1,1,1,1,1,1,1]]],17],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1,1]]],[[3,[2]]]],[[[4,[1,1,1,1]]],[[3,[4]]]],[[[5,[1,1,1,1,1,1,1,1]]],[[3,[5]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[3,[6]]]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[[13,[1,1]]],[[23,[[2,[1,1]],[13,[1,1]]]]]],[[[14,[1,1,1,1]]],[[23,[[4,[1,1,1,1]],[14,[1,1,1,1]]]]]],[[[15,[1,1,1,1,1,1,1,1]]],[[23,[[5,[1,1,1,1,1,1,1,1]],[15,[1,1,1,1,1,1,1,1]]]]]],[[[16,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[23,[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],[16,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]]]]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[11,[[2,[1,1]]]],[[[26,[25]]],26],[[[26,[25]]],26],[11,[[4,[1,1,1,1]]]],[11,[[5,[1,1,1,1,1,1,1,1]]]],[[[26,[25]]],26],[11,[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]]],[[[26,[25]]],26],[[[26,[25]]],26],[[[26,[25]]],26],[[[26,[25]]],26],[[[26,[25]]],26],[[[26,[25]]],26],[[[26,[25]]],26],[[[26,[25]]],26],[[[26,[25]]],26],[[[2,[1,1]]],[[13,[1,1]]]],[[[4,[1,1,1,1]]],[[14,[1,1,1,1]]]],[[[5,[1,1,1,1,1,1,1,1]]],[[15,[1,1,1,1,1,1,1,1]]]],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]],[[16,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]]],[[[2,[1,1]],27],3],[[[4,[1,1,1,1]],27],3],[[[5,[1,1,1,1,1,1,1,1]],27],3],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],27],3],[[[2,[1,1]],27],3],[[[4,[1,1,1,1]],27],3],[[[5,[1,1,1,1,1,1,1,1]],27],3],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],27],3],[[[4,[1,1,1,1]],27],3],[[[5,[1,1,1,1,1,1,1,1]],27],3],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],27],3],[[[4,[1,1,1,1]],27],3],[[[5,[1,1,1,1,1,1,1,1]],27],3],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],27],3],[[[5,[1,1,1,1,1,1,1,1]],27],3],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],27],3],[[[5,[1,1,1,1,1,1,1,1]],27],3],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],27],3],[[[5,[1,1,1,1,1,1,1,1]],27],3],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],27],3],[[[5,[1,1,1,1,1,1,1,1]],27],3],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],27],3],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],27],3],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],27],3],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],27],3],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],27],3],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],27],3],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],27],3],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],27],3],[[[6,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],27],3]],"p":[[8,"ErasablePtr"],[3,"Union2"],[4,"Option"],[3,"Union4"],[3,"Union8"],[3,"Union16"],[3,"Builder2"],[3,"Builder4"],[3,"Builder8"],[3,"Builder16"],[6,"ErasedPtr"],[8,"Clone"],[4,"Enum2"],[4,"Enum4"],[4,"Enum8"],[4,"Enum16"],[15,"bool"],[8,"PartialEq"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[8,"Hash"],[4,"Result"],[3,"TypeId"],[3,"Erased"],[3,"NonNull"],[8,"FnOnce"]]},\
"rc_borrow":{"doc":"Borrowed forms of <code>Rc</code> and <code>Arc</code>.","t":[3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ArcBorrow","RcBorrow","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","deref","deref","downgrade","downgrade","eq","eq","erase","erase","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","hash","hash","into","into","into_raw","into_raw","partial_cmp","partial_cmp","strong_count","strong_count","to_owned","to_owned","to_socket_addrs","to_socket_addrs","to_string","to_string","to_weak","to_weak","try_from","try_from","try_into","try_into","type_id","type_id","unerase","unerase","unerase","unerase","upgrade","upgrade","weak_count","weak_count"],"q":["rc_borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Borrowed version of <code>Arc</code>.","Borrowed version of <code>Rc</code>.","","","","","","","","","","","","","","","","","Convert this borrowed pointer into a standard reference.","Convert this borrowed pointer into a standard reference.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Construct a new <code>ArcBorrow</code> from a raw pointer.","Construct a new <code>RcBorrow</code> from a raw pointer.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get a raw pointer that can be used with <code>from_raw</code>.","Get a raw pointer that can be used with <code>from_raw</code>.","","","Get the number of strong owning pointers to this …","Get the number of strong owning pointers to this …","","","","","","","Convert this borrowed pointer into a weak pointer.","Convert this borrowed pointer into a weak pointer.","","","","","","","","","","","Convert this borrowed pointer into an owned pointer.","Convert this borrowed pointer into an owned pointer.","Get the number of weak owning pointers to this allocation.","Get the number of weak owning pointers to this allocation."],"i":[0,0,1,2,1,1,2,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,1,1,2,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,1,2,2,1,2,1,2],"f":[0,0,[1],[2],[[[1,[3]]]],[[]],[[[2,[3]]]],[[]],[[]],[[]],[[[1,[3]]],[[1,[3]]]],[[[2,[3]]],[[2,[3]]]],[[]],[[]],[[1,1],4],[[2,2],4],[[[1,[3]]]],[[[2,[3]]]],[[[1,[3]]]],[[[2,[3]]]],[1,5],[2,5],[1,6],[2,6],[[1,7],8],[[1,7],8],[[1,7],8],[[1,7],8],[[1,7],8],[[1,7],8],[[1,7],8],[[1,7],8],[[1,7],8],[[2,7],8],[[2,7],8],[[2,7],8],[[2,7],8],[[2,7],8],[[2,7],8],[[2,7],8],[[2,7],8],[[2,7],8],[[]],[9,[[1,[3]]]],[10,[[2,[3]]]],[[]],[[],[[1,[3]]]],[[],[[2,[3]]]],[1],[2],[[]],[[]],[[[1,[3]]]],[[[2,[3]]]],[1,[[11,[4]]]],[2,[[11,[4]]]],[[[1,[3]]],12],[[[2,[3]]],12],[[]],[[]],[1,13],[2,13],[[],14],[[],14],[[[1,[3]]],[[15,[3]]]],[[[2,[3]]],[[16,[3]]]],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[[20,[19]]],20],[6,1],[[[20,[19]]],20],[6,2],[[[1,[3]]],[[9,[3]]]],[[[2,[3]]],[[10,[3]]]],[[[1,[3]]],12],[[[2,[3]]],12]],"p":[[3,"ArcBorrow"],[3,"RcBorrow"],[8,"Sized"],[4,"Ordering"],[15,"bool"],[6,"ErasedPtr"],[3,"Formatter"],[6,"Result"],[3,"Arc"],[3,"Rc"],[4,"Option"],[15,"usize"],[6,"Result"],[3,"String"],[3,"Weak"],[3,"Weak"],[4,"Result"],[3,"TypeId"],[3,"Erased"],[3,"NonNull"]]},\
"rc_box":{"doc":"Known unique versions of <code>Rc</code> and <code>Arc</code>. This allows them to …","t":[3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ArcBox","RcBox","as_mut","as_mut","as_raw","as_raw","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cmp","cmp","deref","deref","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","eq","eq","erase","erase","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_raw","from_raw","get_mut","get_mut","get_mut_unchecked","get_mut_unchecked","hash","hash","into","into","into_inner","into_inner","into_iter","into_iter","into_raw","into_raw","leak","leak","new","new","next","next","next_back","next_back","nth","nth","nth_back","nth_back","partial_cmp","partial_cmp","pin","pin","size_hint","size_hint","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","unerase","unerase","unerase","unerase","write","write","write_i128","write_i128","write_i16","write_i16","write_i32","write_i32","write_i64","write_i64","write_i8","write_i8","write_isize","write_isize","write_u128","write_u128","write_u16","write_u16","write_u32","write_u32","write_u64","write_u64","write_u8","write_u8","write_usize","write_usize"],"q":["rc_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Known unique version of <code>Arc</code>.","Known unique version of <code>Rc</code>.","","","Returns a raw pointer to the object <code>T</code> pointed to by this …","Returns a raw pointer to the object <code>T</code> pointed to by this …","","","","","","","","","","","","","","","","","Attempt to downcast the box to a concrete type.","Attempt to downcast the box to a concrete type.","Attempt to downcast the box to a concrete type.","Attempt to downcast the box to a concrete type.","Attempt to downcast the box to a concrete type.","Attempt to downcast the box to a concrete type.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","","","","Construct an ArcBox from a raw pointer.","Construct an RcBox from a raw pointer.","Get a mutable reference into the <code>ArcBox</code>.","Get a mutable reference into the <code>RcBox</code>.","Get a mutable reference into the <code>ArcBox</code>.","Get a mutable reference into the <code>RcBox</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Deconstruct this <code>ArcBox</code>, returning the inner value.","Deconstruct this <code>RcBox</code>, returning the inner value.","","","Consume the <code>ArcBox</code>, returning the wrapped pointer.","Consume the <code>RcBox</code>, returning the wrapped pointer.","Consume and leak the <code>ArcBox</code>.","Consume and leak the <code>RcBox</code>.","Create a new ArcBox.","Create a new RcBox.","","","","","","","","","","","Construct a new <code>Pin&lt;ArcBox&lt;T&gt;&gt;</code>. If <code>T</code> does not implement …","Construct a new <code>Pin&lt;RcBox&lt;T&gt;&gt;</code>. If <code>T</code> does not implement …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,2,3,2,3,2,3,2,2,3,3,2,2,3,3,2,3,2,3,2,3,2,2,2,3,3,3,2,3,2,3,2,3,2,3,2,2,2,3,3,3,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,2,3,3,2,3,2,3,2,2,3,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3],"f":[0,0,[[[2,[1]]]],[[[3,[1]]]],[[[2,[1]]],[[4,[1]]]],[[[3,[1]]],[[4,[1]]]],[[[2,[1]]]],[[[3,[1]]]],[[]],[[[2,[1]]]],[[]],[[[3,[1]]]],[[[2,[1]]]],[[]],[[[3,[1]]]],[[]],[[2,2],5],[[3,3],5],[[[2,[1]]]],[[[3,[1]]]],[[[2,[1]]]],[[[3,[1]]]],[[[2,[6]]],[[7,[2,[2,[6]]]]]],[[[2,[6]]],[[7,[2,[2,[6]]]]]],[[[2,[6]]],[[7,[2,[2,[6]]]]]],[[[3,[6]]],[[7,[3,[3,[6]]]]]],[[[3,[6]]],[[7,[3,[3,[6]]]]]],[[[3,[6]]],[[7,[3,[3,[6]]]]]],[[[2,[1]]]],[[[3,[1]]]],[2,8],[3,8],[2,9],[3,9],[2,10],[3,10],[[2,11],12],[[2,11],12],[[[2,[1]],11],12],[[3,11],12],[[[3,[1]],11],12],[[3,11],12],[[],2],[[[13,[1]]],[[2,[1]]]],[14],[[]],[15,[[2,[16]]]],[17,2],[[],2],[16,[[2,[16]]]],[[],3],[15,[[3,[16]]]],[[],3],[16,[[3,[16]]]],[[[13,[1]]],[[3,[1]]]],[17,3],[[]],[14],[18,2],[18,3],[[],[[2,[1]]]],[[],[[3,[1]]]],[[[2,[1]]],19],[[[3,[1]]],19],[[[2,[1]]]],[[[3,[1]]]],[2],[3],[[]],[[]],[[[2,[1]]],1],[[[3,[1]]],1],[[]],[[]],[[[2,[1]]],[[4,[1]]]],[[[3,[1]]],[[4,[1]]]],[[[2,[1]]]],[[[3,[1]]]],[1,[[2,[1]]]],[1,[[3,[1]]]],[2,19],[3,19],[2,19],[3,19],[[2,20],19],[[3,20],19],[[2,20],19],[[3,20],19],[2,[[19,[5]]]],[3,[[19,[5]]]],[1,[[21,[[2,[1]]]]]],[1,[[21,[[3,[1]]]]]],[2],[3],[[],15],[[],15],[[],7],[[[22,[1]]],[[7,[[2,[1]],[22,[1]]]]]],[[[23,[1]]],[[7,[[3,[1]],[23,[1]]]]]],[[],7],[[],7],[[],7],[[],24],[[],24],[[[4,[25]]],4],[9,2],[[[4,[25]]],4],[9,3],[2],[3],[[2,26]],[[3,26]],[[2,27]],[[3,27]],[[2,28]],[[3,28]],[[2,29]],[[3,29]],[[2,30]],[[3,30]],[[2,31]],[[3,31]],[[2,32]],[[3,32]],[[2,33]],[[3,33]],[[2,34]],[[3,34]],[[2,10]],[[3,10]],[[2,35]],[[3,35]],[[2,20]],[[3,20]]],"p":[[8,"Sized"],[3,"ArcBox"],[3,"RcBox"],[3,"NonNull"],[4,"Ordering"],[8,"Any"],[4,"Result"],[15,"bool"],[6,"ErasedPtr"],[15,"u64"],[3,"Formatter"],[6,"Result"],[3,"Box"],[15,"never"],[3,"String"],[15,"str"],[3,"Vec"],[8,"IntoIterator"],[4,"Option"],[15,"usize"],[3,"Pin"],[3,"Arc"],[3,"Rc"],[3,"TypeId"],[3,"Erased"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[15,"isize"],[15,"u128"],[15,"u16"],[15,"u32"],[15,"u8"]]},\
"slice_dst":{"doc":"Support for custom slice-based DSTs.","t":[8,8,3,3,8,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,10,11,11,11,11,10,10,11,11,12,12,11,11,11,11,10,11,11,11,11,11,11],"n":["AllocSliceDst","SliceDst","SliceWithHeader","StrWithHeader","TryAllocSliceDst","alloc_slice_dst","alloc_slice_dst_in","borrow","borrow","borrow_mut","borrow_mut","eq","eq","fmt","fmt","from","from","from_slice","hash","hash","header","header","into","into","layout_for","layout_for","layout_for","new","new","new_slice_dst","retype","retype","retype","slice","str","try_from","try_from","try_into","try_into","try_new_slice_dst","type_id","type_id","unerase","unerase","unerase","unerase"],"q":["slice_dst","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Types that can allocate a custom slice DST within them.","A custom slice-based dynamically sized type.","A custom slice-based DST.","A custom str-based DST.","Types that can allocate a custom slice DST within them, …","Allocate a slice-based DST with the global allocator.","Allocate a slice-based DST with the global allocator …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Create a new slice/header DST from a slice, in a …","","","The included header. Does not dictate the slice length.","The included header. Does not dictate the slice length.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get the layout of the slice-containing type with the given …","","","Create a new slice/header DST in a <code>AllocSliceDst</code> container.","Create a new str/header DST in a <code>AllocSliceDst</code> container.","Create a new custom slice DST.","Add the type onto an untyped pointer.","","","The included slice.","The included str.","","","","","Create a new custom slice DST with a fallible …","","","","","",""],"i":[0,0,0,0,0,0,0,6,8,6,8,6,8,6,8,6,8,6,6,8,6,8,6,8,3,6,8,6,8,19,3,6,8,6,8,6,8,6,8,20,6,8,6,6,8,8],"f":[0,0,0,0,0,[1,[[4,[[0,[2,3]]]]]],[1,[[4,[[0,[2,3]]]]]],[[]],[[]],[[]],[[]],[[[6,[5,5]],6],7],[[[8,[5]],8],7],[[[6,[9,9]],10],11],[[[8,[9]],10],11],[[]],[[]],[[]],[[[6,[12,12]]]],[[[8,[12]]]],0,0,[[]],[[]],[1,13],[1,13],[1,13],[[]],[14],[1],[4,4],[4,[[4,[6]]]],[4,[[4,[8]]]],0,0,[[],15],[[],15],[[],15],[[],15],[1,15],[[],16],[[],16],[17,[[4,[6]]]],[[[4,[18]]],4],[[[4,[18]]],4],[17,[[4,[8]]]]],"p":[[15,"usize"],[8,"Sized"],[8,"SliceDst"],[3,"NonNull"],[8,"PartialEq"],[3,"SliceWithHeader"],[15,"bool"],[3,"StrWithHeader"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[8,"Hash"],[3,"Layout"],[15,"str"],[4,"Result"],[3,"TypeId"],[6,"ErasedPtr"],[3,"Erased"],[8,"AllocSliceDst"],[8,"TryAllocSliceDst"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
